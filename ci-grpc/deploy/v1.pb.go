// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1.proto

package deploy_rpc_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeployRequest struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Param                string   `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployRequest) Reset()         { *m = DeployRequest{} }
func (m *DeployRequest) String() string { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()    {}
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4aa7d76fd7ee8a, []int{0}
}

func (m *DeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRequest.Unmarshal(m, b)
}
func (m *DeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRequest.Marshal(b, m, deterministic)
}
func (m *DeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRequest.Merge(m, src)
}
func (m *DeployRequest) XXX_Size() int {
	return xxx_messageInfo_DeployRequest.Size(m)
}
func (m *DeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRequest proto.InternalMessageInfo

func (m *DeployRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *DeployRequest) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

type DeployReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployReply) Reset()         { *m = DeployReply{} }
func (m *DeployReply) String() string { return proto.CompactTextString(m) }
func (*DeployReply) ProtoMessage()    {}
func (*DeployReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e4aa7d76fd7ee8a, []int{1}
}

func (m *DeployReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployReply.Unmarshal(m, b)
}
func (m *DeployReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployReply.Marshal(b, m, deterministic)
}
func (m *DeployReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployReply.Merge(m, src)
}
func (m *DeployReply) XXX_Size() int {
	return xxx_messageInfo_DeployReply.Size(m)
}
func (m *DeployReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeployReply proto.InternalMessageInfo

func (m *DeployReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeployReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*DeployRequest)(nil), "DeployRequest")
	proto.RegisterType((*DeployReply)(nil), "DeployReply")
}

func init() { proto.RegisterFile("v1.proto", fileDescriptor_2e4aa7d76fd7ee8a) }

var fileDescriptor_2e4aa7d76fd7ee8a = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x33, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x57, 0xb2, 0xe4, 0xe2, 0x75, 0x49, 0x2d, 0xc8, 0xc9, 0xaf, 0x0c, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x49, 0x4c, 0x49, 0x29, 0x92, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58, 0x0b, 0x12, 0x8b, 0x12, 0x73, 0x25,
	0x98, 0xc0, 0x82, 0x10, 0x8e, 0x92, 0x31, 0x17, 0x37, 0x4c, 0x6b, 0x41, 0x4e, 0x25, 0x48, 0x63,
	0x72, 0x7e, 0x4a, 0x2a, 0x58, 0x23, 0x6b, 0x10, 0x98, 0x2d, 0x24, 0xc0, 0xc5, 0x9c, 0x5b, 0x9c,
	0x0e, 0xd5, 0x06, 0x62, 0x1a, 0xd9, 0xc2, 0xec, 0x0b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15,
	0xd2, 0xe1, 0xe2, 0x0a, 0x4a, 0x2d, 0x2e, 0x49, 0x2c, 0x2a, 0xf1, 0xca, 0x4f, 0x12, 0xe2, 0xd3,
	0x43, 0x71, 0x8d, 0x14, 0x8f, 0x1e, 0x92, 0x15, 0x4a, 0x0c, 0x4e, 0xfc, 0x51, 0xbc, 0x29, 0x60,
	0x01, 0xbd, 0xa2, 0x82, 0x64, 0xbd, 0x32, 0xc3, 0x24, 0x36, 0xb0, 0x37, 0x8c, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0x01, 0x94, 0x88, 0xd2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeployServiceClient is the client API for DeployService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployServiceClient interface {
	RestartJob(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployReply, error)
}

type deployServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeployServiceClient(cc *grpc.ClientConn) DeployServiceClient {
	return &deployServiceClient{cc}
}

func (c *deployServiceClient) RestartJob(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployReply, error) {
	out := new(DeployReply)
	err := c.cc.Invoke(ctx, "/DeployService/RestartJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployServiceServer is the server API for DeployService service.
type DeployServiceServer interface {
	RestartJob(context.Context, *DeployRequest) (*DeployReply, error)
}

// UnimplementedDeployServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeployServiceServer struct {
}

func (*UnimplementedDeployServiceServer) RestartJob(ctx context.Context, req *DeployRequest) (*DeployReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartJob not implemented")
}

func RegisterDeployServiceServer(s *grpc.Server, srv DeployServiceServer) {
	s.RegisterService(&_DeployService_serviceDesc, srv)
}

func _DeployService_RestartJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).RestartJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeployService/RestartJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).RestartJob(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeployService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DeployService",
	HandlerType: (*DeployServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RestartJob",
			Handler:    _DeployService_RestartJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1.proto",
}
